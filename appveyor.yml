#
# Copyright INAOS GmbH, Thalwil, 2018.
# Copyright Francesc Alted, 2018.
#
# All rights reserved.
#
# This software is the confidential and proprietary information of INAOS GmbH
# and Francesc Alted ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the license agreement.
#
 
branches:
  # whitelist
  only:
    - master
  
environment:
  jfrog_artifactory_uid: appveyor
  jfrog_artifactory_pwd:
    secure: 2xpsiuGNHwFPtxdh8pA/Mm0I1bC1EfC8NBSoxOEiNco=
  codecov_api_key:
    secure: UN9Xgah/RiLwDuTuzBIpcStsLxVt5hNIuHpV5Th8R0YvSsYQeZphSICK8Kes8z2r
  gitlab_priv_key:
    secure: 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
    
  matrix:
    - MY_NAME: Windows VS 2017 Debug 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: Debug
      BUILD_ARCH: x86_64
      RUN_SONAR: no
      
    - MY_NAME: Linux Debug 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu
      BUILD_CONFIGURATION: Debug
      RUN_SONAR: no

    - MY_NAME: Linux Release 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu
      BUILD_CONFIGURATION: RelWithDebInfo
      RUN_SONAR: no

    - MY_NAME: Windows VS 2017 Release 64bit
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VSINSTALL: "Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
      MSVC_PLATFORM: amd64
      BUILD_CONFIGURATION: RelWithDebInfo
      BUILD_ARCH: x86_64
      RUN_SONAR: no
      
matrix:
  fast_finish: false

init:
  - cmd: C:\"Program Files (x86)"\"%VSINSTALL%"\vcvarsall.bat %MSVC_PLATFORM%
  
cache:
  - C:\ProgramData\chocolatey\lib -> appveyor.yml # on Ubuntu builds this path will not be found
  - /var/cache/apt/archives/inaos-dev-quality-tools_1.0-1.deb # on VS builds this path will not be found

install:
  - sh:  |
         sudo sh -c "echo 'deb https://appveyor:N9z6j8yVukyeLcfE@inaos.jfrog.io/inaos/debian-local xenial main' >> /etc/apt/sources.list"
         sudo wget --http-user=$jfrog_artifactory_uid --http-password=$jfrog_artifactory_pwd -O - https://inaos.jfrog.io/inaos/api/gpg/key/public | sudo apt-key add -
         sudo wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
         sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
         sudo sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'
         sudo apt-get update
         sudo apt-get install inaos-dev-quality-tools
         sudo apt-get install gcovr
         sudo apt-get install xsltproc
         sudo apt-get install -y intel-mkl-2019.1-053
         appveyor DownloadFile https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
  - cmd: |
         choco source add -n "inaos" -s "https://inaos.jfrog.io/inaos/api/nuget/nuget-release-local/" -u %jfrog_artifactory_uid% -p %jfrog_artifactory_pwd%
         choco install inaos-dev-quality-tools -y --force
         C:\Miniconda37-x64\Scripts\conda install -y -c intel mkl-include
         C:\Miniconda37-x64\Scripts\conda install -y -c intel mkl-static
         appveyor DownloadFile https://sonarcloud.io/static/cpp/build-wrapper-win-x86.zip
  - ps: |
        mkdir -p $HOME/.inaos/cmake
        $inac_home = Join-Path -Path $env:HOME -ChildPath "INAOS"
        mkdir -p $inac_home
        $repos = "INAC_REPOSITORY_LOCAL=$inac_home`nINAC_REPOSITORY_REMOTE=https://inaos.jfrog.io/inaos/libs-release-local/inaos`nINAC_REPOSITORY_USRPWD=licensed:AKCp5bBraH7CasbsYCURsjzkbjXwVwdYcT7u39EiuL6GjnK1VKfKQWCd1E2E64mHokU5YUHku"
        Set-Content $HOME/.inaos/cmake/repository.txt $repos
        $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n"
        $fileContent += $env:gitlab_priv_key.Replace(' ', "`n")
        $fileContent += "`n-----END RSA PRIVATE KEY-----`n"
        Set-Content $HOME/.ssh/id_rsa $fileContent
       
build_script:
  - sh: |
        git submodule update -q --init --recursive
        mkdir cmake-build-$BUILD_CONFIGURATION
        7z e build-wrapper-linux-x86.zip -ocmake-build-$BUILD_CONFIGURATION
        cd cmake-build-$BUILD_CONFIGURATION
        cmake -G "Unix Makefiles" ../ -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DINAC_COVERAGE_ENABLED=1 $snapshot
        ./build-wrapper-linux-x86-64 --out-dir bw-output make
  - cmd: |
         git submodule update -q --init --recursive
         mkdir cmake-build-%BUILD_CONFIGURATION%
         7z e build-wrapper-win-x86.zip -ocmake-build-%BUILD_CONFIGURATION%
         cd cmake-build-%BUILD_CONFIGURATION%
         cmake -G "NMake Makefiles" ../ -DCMAKE_BUILD_TYPE=%BUILD_CONFIGURATION% -DINAC_TARGET_ARCH=%BUILD_ARCH% -DINAC_COVERAGE_ENABLED=1 %snapshot%
         build-wrapper-win-x86-64.exe --out-dir bw-output nmake
after_build:
  - sh: |
        cpack
  - cmd: |
         cpack

test_script:
  - sh: |
        make coverage || true
  - cmd: |
         nmake coverage & exit 0

after_test:
  - ps: |
        $wc = New-Object 'System.Net.WebClient'
        $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $env:APPVEYOR_BUILD_FOLDER/cmake-build-$env:BUILD_CONFIGURATION/junit.xml))
     
        # Code coverage
        $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        bash codecov.sh -f "$env:APPVEYOR_BUILD_FOLDER/cmake-build-$env:BUILD_CONFIGURATION/tests-coverage.xml" -t $env:codecov_api_key
        
        # Detect if there are any failure nodes in the junit results
        [xml]$results = Get-Content $env:APPVEYOR_BUILD_FOLDER/cmake-build-$env:BUILD_CONFIGURATION/junit.xml
        $failure = $results.SelectSingleNode("//failure")
        if ($failure -ne $null) { 
            throw "Forcing build failure due to unit test failure(s)"
        }
   
