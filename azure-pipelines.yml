trigger:
- develop

variables:
- group: jfrog-artifactory

jobs:
- job: BuildWindows

  strategy:
    matrix:
      windows:
        imageName: 'vs2017-win2016'
        BUILD_CONFIGURATION: Debug
        MULTITHREADING: False
        BUILD_ARCH: x86_64
        VSINSTALL: "Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build"
        MSVC_PLATFORM: amd64

  pool:
    vmImage: $(imageName)

  timeoutInMinutes: 0

  steps:
  - powershell: gci env:* | sort-object name

  - powershell: |
      mkdir -p $HOME/.inaos/cmake
      $inac_home = Join-Path -Path $env:USERPROFILE -ChildPath "INAOS"
      mkdir -p $inac_home
      $repos = "INAC_REPOSITORY_LOCAL=$inac_home`nINAC_REPOSITORY_REMOTE=https://inaos.jfrog.io/inaos/libs-release-local/inaos`nINAC_REPOSITORY_USRPWD=licensed:AKCp5bBraH7CasbsYCURsjzkbjXwVwdYcT7u39EiuL6GjnK1VKfKQWCd1E2E64mHokU5YUHku"
      Set-Content $HOME/.inaos/cmake/repository.txt $repos

  - bash: |
      git submodule update --init --recursive

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      @echo on

      :: choco source add -n "inaos" -s "https://inaos.jfrog.io/inaos/api/nuget/nuget-release-local/" -u %jfrog_artifactory_uid% -p %jfrog_artifactory_pwd%
      :: choco install inaos-dev-quality-tools -y --force
      conda install -y -c intel mkl-include
      conda install -y -c intel mkl-static
    env:
      VSINSTALL: $(VSINSTALL)
      MSVC_PLATFORM: $(MSVC_PLATFORM)
      jfrog_artifactory_uid: $(jfrog_artifactory_uid)
      jfrog_artifactory_pwd: $(jfrog_artifactory_pwd)
  - script: |
      @echo on

      call "C:\Program Files (x86)\%VSINSTALL%\vcvarsall.bat" %MSVC_PLATFORM%
      mkdir cmake-build-%BUILD_CONFIGURATION%
      cd cmake-build-%BUILD_CONFIGURATION%
      cmake -G "NMake Makefiles" ../ -DCMAKE_BUILD_TYPE=%BUILD_CONFIGURATION%  -DMULTITHREADING=%MULTITHREADING% -DINAC_TARGET_ARCH=%BUILD_ARCH%
      nmake
    env:
      BUILD_CONFIGURATION: $(BUILD_CONFIGURATION)
      BUILD_ARCH: $(BUILD_ARCH)

  - script: |
     @echo on

     cd cmake-build-%BUILD_CONFIGURATION%
     tests
    displayName: Execute tests

  - publish: $(System.DefaultWorkingDirectory)/cmake-build-%BUILD_CONFIGURATION%/libiarray.dll
    artifact: libiarray-shared-win
